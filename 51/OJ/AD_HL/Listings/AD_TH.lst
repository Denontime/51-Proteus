C51 COMPILER V9.60.0.0   AD_TH                                                             01/22/2020 18:25:44 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE AD_TH
OBJECT MODULE PLACED IN .\Objects\AD_TH.obj
COMPILER INVOKED BY: D:\Keil5\C51\BIN\C51.EXE AD_TH.c OPTIMIZE(8,SPEED) BROWSE INCDIR(C:\Users\27132\Desktop\计算器\计算
                    -器源码工程) DEBUG OBJECTEXTEND PRINT(.\Listings\AD_TH.lst) TABS(2) OBJECT(.\Objects\AD_TH.obj)

line level    source

   1          #include <reg52.h>                                   //包含头文件
   2          #include <intrins.h>
   3          #include <stdio.h>
   4          //#include <1602.h>
   5          //#include <delay.h>
   6          
   7          #define uint unsigned int
   8          #define uchar unsigned char
   9          
  10          sbit P1_0=P3^5;
  11          uint PERIOD=2000;
  12          uint HI_NUM=200;
  13          uint LOW_NUM;
  14          uchar HIGAO,HIDI;
  15          uchar LOWGAO,LOWDI;
  16          
  17          sbit ale=P2^6;
  18          sbit start=P2^7;
  19          sbit eoc=P3^3;
  20          sbit oe=P3^4;                                             //定义adc0809的控制引脚
  21          
  22          sbit adda=P2^0;
  23          sbit addb=P2^1;
  24          sbit addc=P2^2;                                           //adc0809的地址引脚
  25          
  26          sbit clk=P3^7;                                            //adc0809时钟引脚
  27          
  28          sbit X9313W_INC  = P3^0;               //计数脉冲输入端，下降沿触发
  29          sbit X9313W_UPDN = P3^1;               //方向，高电平加、低电平减
  30          sbit X9313W_CS   = P3^2;               //片选,低电平选中开始操作
  31          
  32          # define LCD_DB        P1
  33                  sbit         LCD_RS=P2^4;
  34                  sbit         LCD_RW=P2^5;
  35                  sbit         LCD_E=P2^3;
  36                  
  37          /*********************************************************************************************************
             -***/
  38          
  39          void LCD_init(void);//初始化函数
  40          void LCD_write_command(uchar command);//写指令函数
  41          void LCD_write_data(uchar dat);//写数据函数
  42          void LCD_disp_char(uchar x,uchar y,uchar dat);//在某个屏幕位置上显示一个字符,X（0-16),y(1-2)
  43          void delay_n40us(uint n);//延时函数
  44          //********************************
  45          //*******初始化函数***************
  46          void LCD_init(void)
  47          {
  48   1      LCD_write_command(0x38);//设置8位格式，2行，5x7
  49   1      LCD_write_command(0x0c);//整体显示，关光标，不闪烁
  50   1      LCD_write_command(0x06);//设定输入方式，增量不移位
  51   1      LCD_write_command(0x01);//清除屏幕显示
  52   1      delay_n40us(100);
  53   1      }
C51 COMPILER V9.60.0.0   AD_TH                                                             01/22/2020 18:25:44 PAGE 2   

  54          //********************************
  55          //********写指令函数************
  56          void LCD_write_command(uchar dat)
  57          {
  58   1      LCD_DB=dat;
  59   1      LCD_RS=0;//指令
  60   1      LCD_RW=0;//写入
  61   1      LCD_E=1;//允许
  62   1      LCD_E=0;
  63   1      delay_n40us(1);//实践证明，我的LCD1602上，用for循环1次就能完成普通写指令。
  64   1      }
  65          //*******************************
  66          //********写数据函数*************
  67          void LCD_write_data(uchar dat)
  68          {
  69   1      LCD_DB=dat;
  70   1      LCD_RS=1;//数据
  71   1      LCD_RW=0;//写入
  72   1      LCD_E=1;//允许
  73   1      LCD_E=0;
  74   1      delay_n40us(1);
  75   1      }
  76          //********************************
  77          //*******显示一个字符函数*********
  78          void LCD_disp_char(uchar x,uchar y,uchar dat)  ////参数：（列，行【0第一行，1第二行】，字符）
  79          {
  80   1      uchar address;
  81   1      if(y==1)
  82   1               address=0x80+x;
  83   1      else
  84   1               address=0xc0+x;
  85   1      LCD_write_command(address);
  86   1      LCD_write_data(dat);
  87   1      }
  88          
  89          void DisplayListChar (unsigned char x,unsigned char y,unsigned char *p,unsigned char count)
  90          //参数：（列，行【0第二行，1第一行】，字符串，字符串长度）
  91          {
  92   1      unsigned char i;   
  93   1          for(i=0;i<count;i++)
  94   1          {
  95   2          uchar address;
  96   2              if(y==1)  
  97   2            address=0x80+x; //当要显示第一行时地址码+0x80;
  98   2              else 
  99   2            address=0xc0+x;; //在第二行显示是地址码+0xC0;
 100   2      
 101   2              LCD_write_command(address);
 102   2          LCD_write_data(*p); //发送地址码
 103   2                                  //发送要显示的字符编码
 104   2              x++;
 105   2              p++;
 106   2          }       
 107   1      }   
 108          
 109          
 110          /******************************/
 111          //********延时函数***************
 112          void delay_n40us(uint n)
 113          { uint i;
 114   1            uchar j;            
 115   1              for(i=n;i>0;i--)
C51 COMPILER V9.60.0.0   AD_TH                                                             01/22/2020 18:25:44 PAGE 3   

 116   1                 for(j=0;j<2;j++);          //在这个延时循环函数中我只做了2次循环，
 117   1      }                                         //实践证明我的LCD1602上普通的指令只需1次循环就能可靠完成。
 118          
 119          /*********************************************************************************************************
             -***/
 120          
 121          unsigned int  voltdata,realvolt1,realvolt,i,j,t,sum,a[5];         //定义全局变量
 122          unsigned char temp[10],cu[]="Current:";        
 123          
 124          void delay( int us)                      //延时函数
 125          {
 126   1        int aus;
 127   1        for(aus=0;aus<us;aus++)
 128   1          _nop_();
 129   1      }
 130          
 131          
 132          void ADC()                         //采集数据
 133          {
 134   1              sum=0;                     //滤波开始
 135   1              for (i=0;i<5;i++)           
 136   1              {
 137   2                      start=1;                         //启动AD转换。
 138   2                      start=0;
 139   2                      while(eoc==0);                   //等待转换结束。
 140   2                      oe=1;
 141   2                      a[i]=P1;                         //输入转换结果。
 142   2                      delay(50);                       //每隔5usAD转换并采集一次数据，将得到的数值存入数组中
 143   2              }
 144   1              for (j=0;j<4;j++)                                
 145   1                      for(i=0;i<4-j;i++)
 146   1                              if(a[i]>a[i+1])
 147   1                              {
 148   2                                      t=a[i];
 149   2                                      a[i]=a[i+1];
 150   2                                      a[i+1]=t;
 151   2                              }
 152   1              for(i=1;i<4;i++)
 153   1              {
 154   2                      sum+=a[i];
 155   2              }                                  //采用冒泡法比较，取中间3个数值
 156   1      
 157   1              voltdata=sum/3;
 158   1              delay(1);
 159   1              oe=0;
 160   1              sprintf(temp,"%.5f",voltdata);
 161   1              sprintf(temp,"%s","mA");
 162   1      }
 163          /***********调整电阻*****************/
 164          
 165          /*************************************/
 166          /*   调整电阻到第RNumber阶阻值     */
 167          /*入口：RNumber：阶阻值0～31         */
 168          /*出口：无                           */
 169          /*************************************/
 170          void X9313W_SetVol(unsigned char RNumber)
 171          { 
 172   1          unsigned char i;
 173   1      
 174   1          X9313W_INC = 1;                   
 175   1          _nop_();
 176   1          _nop_();
C51 COMPILER V9.60.0.0   AD_TH                                                             01/22/2020 18:25:44 PAGE 4   

 177   1          X9313W_CS = 0;
 178   1          _nop_();
 179   1          _nop_();
 180   1          X9313W_UPDN = 0;                    //设为减
 181   1      
 182   1          for(i=0;i<32;i++)
 183   1          {
 184   2              X9313W_INC = 1;
 185   2              _nop_();
 186   2              _nop_();
 187   2              X9313W_INC = 0;
 188   2              _nop_();
 189   2              _nop_();
 190   2          }                                   //减到0
 191   1      
 192   1          X9313W_UPDN = 1;                    //设为加
 193   1          for(i=0;i<RNumber;i++){
 194   2              X9313W_INC=1;
 195   2              _nop_();
 196   2              _nop_();
 197   2              X9313W_INC=0;
 198   2              _nop_();
 199   2              _nop_();
 200   2          }                                   //加到RNumber
 201   1           
 202   1          X9313W_INC = 1;                     //电阻值保存
 203   1          _nop_();
 204   1          _nop_();
 205   1          X9313W_CS = 1;
 206   1          _nop_();
 207   1          _nop_();
 208   1          X9313W_UPDN = 1;
 209   1          _nop_();
 210   1          _nop_();
 211   1          X9313W_INC = 1;
 212   1      }
 213          
 214          /*************************************/
 215          /*     调整电阻增加RNumber阶阻值   */
 216          /*入口：RNumber：阶阻值0～31         */
 217          /*出口：无                           */
 218          /*************************************/
 219          
 220          void X9313W_IncVol(unsigned char RNumber)
 221          { 
 222   1          unsigned char i;
 223   1           
 224   1          X9313W_INC = 1;                   
 225   1          _nop_();
 226   1          _nop_();
 227   1          X9313W_CS = 0;
 228   1          _nop_();
 229   1          _nop_();
 230   1          X9313W_UPDN = 1;                  //加RNumber个指定值
 231   1          
 232   1          for(i=0;i<RNumber;i++)
 233   1          {
 234   2              X9313W_INC=1;
 235   2              _nop_();
 236   2              _nop_();
 237   2              X9313W_INC=0;
 238   2              _nop_();
C51 COMPILER V9.60.0.0   AD_TH                                                             01/22/2020 18:25:44 PAGE 5   

 239   2              _nop_();
 240   2          }
 241   1           
 242   1          X9313W_INC = 1;                    //电阻值保存
 243   1          _nop_();
 244   1          _nop_();
 245   1          X9313W_CS = 1;
 246   1          _nop_();
 247   1          _nop_();
 248   1          X9313W_UPDN = 1;
 249   1          _nop_();
 250   1          _nop_();
 251   1          X9313W_INC = 1;
 252   1      }
 253          /*************************************/
 254          /*     调整电阻减少RNumber阶阻值      */
 255          /*入口：RNumber：阶阻值0～31          */
 256          /*出口：无                            */
 257          /*************************************/
 258          
 259          void X9313W_DecVol(unsigned char RNumber)
 260          {
 261   1          unsigned char i;
 262   1          
 263   1          X9313W_INC = 1;                   
 264   1          _nop_();
 265   1          _nop_();
 266   1          X9313W_CS = 0;
 267   1          _nop_();
 268   1          _nop_();
 269   1          X9313W_UPDN = 0;                    //减RNumber个指定值
 270   1          for(i=0;i<RNumber;i++){
 271   2              X9313W_INC=1;
 272   2              _nop_();
 273   2              _nop_();
 274   2              X9313W_INC=0;
 275   2              _nop_();
 276   2              _nop_();
 277   2          }
 278   1           
 279   1          X9313W_INC = 1;                    //电阻值保存
 280   1          _nop_();
 281   1          _nop_();
 282   1          X9313W_CS = 1;
 283   1          _nop_();
 284   1          _nop_();
 285   1          X9313W_UPDN = 1;
 286   1          _nop_();
 287   1          _nop_();
 288   1          X9313W_INC = 1;
 289   1      }
 290          
 291          void init()                             //初始化程序
 292          {
 293   1          P1_0=0;
 294   1          LOW_NUM=PERIOD-HI_NUM;
 295   1          HIGAO=(65536-HI_NUM)/256;
 296   1          HIDI=(65536-HI_NUM)%256;
 297   1          LOWGAO=(65536-LOW_NUM)/256;
 298   1          LOWDI=(65536-LOW_NUM)%256;
 299   1      
 300   1          TMOD=0x01;
C51 COMPILER V9.60.0.0   AD_TH                                                             01/22/2020 18:25:44 PAGE 6   

 301   1          TH0=HIGAO;
 302   1          TL0=HIDI;
 303   1        
 304   1          EA =1;                              //打开CPU总中断
 305   1          ET0=1;                              //定时器T0的溢出中断允许
 306   1          ET1=1;                              //定时器T1的溢出中断允许
 307   1          TR0=1;
 308   1          TR1=1;                              
 309   1          EX0=1;                              //外部中断0允许
 310   1          IT0=1;                              //从高到低的负跳变有效
 311   1        
 312   1          start = 0;
 313   1          oe = 0;
 314   1          clk = 0;
 315   1        
 316   1          adda=0;
 317   1          addb=0;
 318   1          addc=0;
 319   1          ale  = 0;
 320   1          ale  = 1;                  //AD输入线路选择
 321   1        
 322   1          X9313W_SetVol(15);                  //将电阻器设为中间值
 323   1          delay(1000);
 324   1      }
 325          
 326          void main()                               //主程序
 327          {
 328   1          init();             //初始化
 329   1          LCD_init();         //初始化液晶屏
 330   1          DisplayListChar(0,1,"Current:",8);    //写入第一行信息，主循环中不再更改此信息，所以在while之前写入
 331   1      
 332   1              while(1)                          //进入while循环
 333   1              { 
 334   2                ADC();
 335   2                if(voltdata>128)                //判断输入
 336   2                {
 337   3                       X9313W_IncVol(voltdata-128);               //调大变阻器
 338   3                       DisplayListChar(3,0,temp,12);                //显示到液晶屏
 339   3                }
 340   2                else
 341   2                {
 342   3                       X9313W_DecVol(128-voltdata);               //调小变阻器
 343   3                       DisplayListChar(3,0,temp,12);                //显示到液晶屏
 344   3                }
 345   2              }                           
 346   1      }
 347          
 348          void timer0() interrupt 1          // 输出500kHz 方波 
 349          {
 350   1          if(P1_0==1)
 351   1          {
 352   2             P1_0=0;
 353   2             TH0=LOWGAO;
 354   2             TL0=LOWDI;
 355   2          }
 356   1          else
 357   1          {
 358   2             P1_0=1;
 359   2             TH0=HIGAO;
 360   2             TL0=HIDI;
 361   2          }
 362   1      }
C51 COMPILER V9.60.0.0   AD_TH                                                             01/22/2020 18:25:44 PAGE 7   



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    990    ----
   CONSTANT SIZE    =     20    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     53      10
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
